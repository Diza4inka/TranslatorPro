import sounddevice as sd
import numpy as np
import scipy.io.wavfile as wav
import speech_recognition as sr
import random
from deep_translator import GoogleTranslator

duration = 5  # —Å–µ–∫—É–Ω–¥—ã –∑–∞–ø–∏—Å–∏
sample_rate = 44100

words_by_level = {
    "easy": ["–∫–æ—Ç", "—Å–æ–±–∞–∫–∞", "–º–æ–ª–æ–∫–æ", "—Å–æ–ª–Ω—Ü–µ"],
    "medium": ["–±–∞–Ω–∞–Ω", "—à–∫–æ–ª–∞", "–æ–∫–Ω–æ", "–∂—ë–ª—Ç—ã–π"],
    "hard": ["—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ", "–≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ"]
}

def translator():
    user_answer = '–¥–∞'
    while user_answer == '–¥–∞':
        print("üéô –ì–æ–≤–æ—Ä–∏ —Å–µ–π—á–∞—Å...")
        recording = sd.rec(
        int(duration * sample_rate),
        samplerate=sample_rate,      
        channels=1,                  
        dtype="int16")              
        sd.wait()  

        wav.write("output.wav", sample_rate, recording)
        print("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º...")

        recognizer = sr.Recognizer()
        with sr.AudioFile("output.wav") as source:
            audio = recognizer.record(source)

        try:
            text = recognizer.recognize_google(audio, language="ru-RU")
            print("üìù –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:", text)
        except sr.UnknownValueError:          
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")
            continue
        except sr.RequestError as e:            
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")
            continue

        lang = input("üåç –ù–∞ –∫–∞–∫–æ–π —è–∑—ã–∫ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏? (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'en' - –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, 'es' - –∏—Å–ø–∞–Ω—Å–∫–∏–π, 'pt' - –ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π, 'id' - –ò–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∏–π, 'pl' - –ü–æ–ª—å—Å–∫–∏–π, 'it' - –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π, 'tr' - –¢—É—Ä–µ—Ü–∫–∏–π): ")

        try:
            translated = GoogleTranslator(source='auto', target=lang).translate(text)
            print("‚úÖ –ü–µ—Ä–µ–≤–æ–¥:", translated)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {e}")
            
        user_answer = input('üîÑ –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–¥–∞/–Ω–µ—Ç): ').lower()

def game():
    print("üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–£–≥–∞–¥–∞–π –ø–µ—Ä–µ–≤–æ–¥'!")
    level = input("üìä –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ (easy, medium, hard): ").lower()

    if level not in words_by_level:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏!")
        return

    mistakes = 0
    score = 0

    while mistakes < 3:
        word = random.choice(words_by_level[level])
        print(f"üî§ –°–ª–æ–≤–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞: {word}")

        print("üéô –ü—Ä–æ–∏–∑–Ω–µ—Å–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º...")
        recording = sd.rec(
        int(duration * sample_rate),
        samplerate=sample_rate,      
        channels=1,                  
        dtype="int16")              
        sd.wait()  
  
        wav.write("output.wav", sample_rate, recording)
        print("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º...")

        recognizer = sr.Recognizer()
        with sr.AudioFile("output.wav") as source:
            audio = recognizer.record(source)

        try:
            recognized_word = recognizer.recognize_google(audio, language="en-US")
            print("üìù –í—ã —Å–∫–∞–∑–∞–ª–∏:", recognized_word)
            word_en = GoogleTranslator(source='ru', target='en').translate(word)
            
            if recognized_word.lower() == word_en.lower():
                print("üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! +1 –æ—á–∫–æ")
                score += 1
            else:
                print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥: {word_en}")
                mistakes += 1
                print(f"‚ö†Ô∏è –û—à–∏–±–æ–∫: {mistakes}/3")
        
        except sr.UnknownValueError:          
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")
            mistakes += 1
            print(f"‚ö†Ô∏è –û—à–∏–±–æ–∫: {mistakes}/3")
        except sr.RequestError as e:            
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")
            mistakes += 1
            print(f"‚ö†Ô∏è –û—à–∏–±–æ–∫: {mistakes}/3")

    print(f"üèÅ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í–∞—à —Å—á–µ—Ç: {score}.")

print("üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:")
choice = input("1 - –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ üàØ, 2 - –ò–≥—Ä–∞ üéÆ: ")
if choice == '1':
    translator()
elif choice == '2':
    game()
else:
    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2.")